9600 baud
fletcher16 checksum
most significant byte on left
2 byte confirm messages in response to certian messages; checksum of full message.
messages constructed as
Header, label, content, checksum, footer

Header   - the same on all messages, two bytes = [0x13,0x37]
label    - One byte, top 4 bits specify packet layout (type)
                     bottom 4 bits are subtype/context
content  - The content array; specifics depend on message type
checksum - Two byte fletcher16 checksum of label+content
footer   - the same on all messages, one byte = [0x9A]

Types:
Waypoint message:
	4 bytes latitude
	4 bytes longitude
	2 bytes accessory
	1 byte  index
	Subtypes:
		Add: Add this waypoint to the list at specified index
		Alter: Change the data of the waypoint at specified index

data message:
	1 byte index
	4 bytes float
	subtypes:
		telemety: Packet contains a telemetry float with label index
		set setting: Packet contains the value the indexed setting should be set to

checksum messages:
	2 byte checksum
	subtypes:
		confirmation: packet contains the checksum of a message to confirm
			its receipt

byte messages:
	1 byte
	subtypes:
		setTargetTo: byte contains the index the drone should target
		command: byte specifies a specific, one time command
		sync: byte contains a sync/sync response token
		deleteWaypoint: byte contains index of waypoint to be deleted

string message:
	variable, null terminated string
	subtypes:
		error: string contains details of detected errors
		state: string contains details of current state

potential flaw: the subtype has taken the roll of the command type byte, but
	has significantly fewer possible values (16)
	A: make byte messages 2 byte messages
		A1: merge with checksum mesages
		A2: keep seperate from checksum messages
		+ one fewer message type
		- more data being send for most commands that isn't necessary
	B: stay seperate
		+ a long form command can be added later while maintaining compat
		- could run out of command types

Telemetry 5 bytes: label, 4 byte float
set setting: 5 bytes label, 4 byte float
add Waypoint
alter waypoint
delete waypoint
confirmation msg: 2 byte: one integer

Command 2 bytes: label, data
poll setting: 1 byte: index
request sync: 0 byte: just label
sync response: 0 byte: just label





messages are minumum of 3 bytes, max of 19 bytes, constructed as
HEADER :(label[1 bytes] : data[length bytes] : checksum [2 bytes]): FOOTER
label = legth[4 bits] : subType[2 bits] : type[2 bits]
checksums calculated over everything except the checksum
types and subtypes listed as enums below.
some messages need confirmations, dictated by constants below
confirmation messages contain only the checksum of the entire message
	being confirmed

sync messages can be sent or received
receiving a sync message should result in:
	the sending of a sync message
	the activation of any "on connection" commands

the dashboard will send all waypoins "on connection"
the drone will upload settings "on connection"

